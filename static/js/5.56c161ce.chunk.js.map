{"version":3,"sources":["assets/images/preloader.svg","components/main/Pagination.jsx","components/main/Quotes.jsx","routes/AllQuotes.jsx"],"names":["module","exports","Pagination","totalPages","page","setPage","turnThePage","e","Number","target","value","button","i","className","onClick","key","high","pagination","push","disabled","range","quotesPerPage","Quotes","quotes","useSelector","state","isFetching","phrase","translate","useTranslate","transliterate","useTransliterate","useState","src","preloader","alt","Math","ceil","length","startPosition","mappedQuotes","filter","q","map","Quote","_id","quote","x","smoothscroll","AllQuotes","filteredQuotes"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,uC,0ECE5B,SAASC,EAAT,GAAkD,IAA7BC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,QAChDD,GAAQD,GAAYE,EAAQ,GA0BhC,IAxBA,IAAMC,EAAc,SAAAC,GAClBF,EAAQG,OAAOD,EAAEE,OAAOC,SAapBC,EAAS,SAAAC,GAAC,OACd,4BAAQF,MAAOE,EAAGC,UAAWT,IAASQ,EAAI,MAAQ,GAAIE,QAASR,EAAaS,IAAKH,GAC9EA,EAAI,IAMHI,EAAOZ,EAAOD,EAFN,EAE2BC,EAF3B,EAE0CD,EAAa,EAC/Dc,EAAa,GACVL,EAHGR,EADE,EACaA,EADb,EAC4B,EAGxBQ,EAAII,EAAMJ,IAAKK,EAAWC,KAAKP,EAAOC,IAExD,OACE,2BACE,4BAAQE,QAxBC,WACPV,GAAQ,GACZC,EAAQD,EAAO,IAsBUe,SAAmB,IAATf,GAAjC,UACCO,EAAO,GACPP,EAAOgB,GAAa,qCACpBH,EACAb,EAAOD,EAZE,EAYmB,GAAK,qCACjCQ,EAAOR,EAAa,GACrB,4BAAQgB,SAAUf,IAASD,EAAa,EAAGW,QAzBlC,WACPV,GAAQD,EAAa,GACzBE,EAAQD,EAAO,KAuBb,W,qEC9BN,IAAMiB,EAAgB,GAEP,SAASC,EAAT,GAA2B,IAAVC,EAAS,EAATA,OAAS,EACVC,aAAY,SAAAC,GAAK,OAAIA,KAA3CC,EADgC,EAChCA,WAAYC,EADoB,EACpBA,OACbC,EAAYC,cACZC,EAAgBC,cAHiB,EAIfC,mBAAS,GAJM,mBAIhC5B,EAJgC,KAI1BC,EAJ0B,KAMvC,GAAIqB,EAAY,OAAO,yBAAKO,IAAKC,IAAWC,IAAI,eAEhD,IAKMhC,EAAaiC,KAAKC,KAAKd,EAAOe,OAASjB,GACvCkB,EAAgBnC,EAAOiB,EAEvBmB,EAAejB,EAClBkB,QAAO,SAACC,EAAG9B,GAAJ,OAAUA,GAAK2B,GAAiB3B,EAAI2B,EAAgBlB,KAC3DsB,KAAI,SAAAD,GAAC,OAAI,kBAACE,EAAA,EAAD,CAAO7B,IAAK2B,EAAEG,IAAKC,MAAOJ,OAEtC,OACE,6BACGf,GAAU,+BAAQC,EAAU,mBAAlB,KAAwCE,EAAcH,GAAtD,MACVa,EACArC,EAAa,GACZ,kBAAC,EAAD,CAAaA,WAAYA,EAAYC,KAAMA,EAAMC,QAjB9B,SAAA0C,GACvB1C,EAAQ0C,GACRC,oB,gCCrBJ,iDAkBeC,UAZG,WAAO,IAChBC,EAAkB1B,aAAY,SAAAC,GAAK,OAAIA,KAAvCyB,eACDtB,EAAYC,cAElB,OACE,8BACE,4BAAKD,EAAU,eACf,kBAAC,IAAD,CAAQL,OAAQ2B","file":"static/js/5.56c161ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.8c6459b9.svg\";","import React from 'react'\n\nexport default function Pagination({totalPages, page, setPage}) {\n  if (page >= totalPages) setPage(0)\n\n  const turnThePage = e => {\n    setPage(Number(e.target.value))\n  }\n\n  const prev = () => {\n    if (page <= 0) return\n    setPage(page - 1)\n  }\n\n  const next = () => {\n    if (page >= totalPages - 1) return\n    setPage(page + 1)\n  }\n\n  const button = i => (\n    <button value={i} className={page === i ? 'red' : ''} onClick={turnThePage} key={i}>\n      {i + 1}\n    </button>\n  )\n\n  const range = 3\n  const low = page > range ? page - range : 1\n  const high = page < totalPages - range ? page + range : totalPages - 1\n  const pagination = []\n  for (let i = low; i < high; i++) pagination.push(button(i))\n\n  return (\n    <p>\n      <button onClick={prev} disabled={page === 0} >‹</button>\n      {button(0)}\n      {page > range + 1 && <span>...</span>}\n      {pagination}\n      {page < totalPages - range - 1 && <span>...</span>}\n      {button(totalPages - 1)}\n      <button disabled={page === totalPages - 1} onClick={next}>›</button>\n    </p>\n  )\n}\n","import React, {useState} from 'react'\nimport {useSelector} from 'react-redux'\n\nimport Quote from './Quote'\nimport Pagionation from './Pagination'\nimport preloader from '../../assets/images/preloader.svg'\nimport {useTranslate, useTransliterate} from '../../store/actions'\nimport {smoothscroll} from '../../utils/helpers'\n\nconst quotesPerPage = 10\n\nexport default function Quotes({quotes}) {\n  const {isFetching, phrase} = useSelector(state => state)\n  const translate = useTranslate()\n  const transliterate = useTransliterate()\n  const [page, setPage] = useState(0)\n\n  if (isFetching) return <img src={preloader} alt=\"loading...\" />\n\n  const setPageAndScroll = x => {\n    setPage(x)\n    smoothscroll()\n  }\n\n  const totalPages = Math.ceil(quotes.length / quotesPerPage)\n  const startPosition = page * quotesPerPage\n\n  const mappedQuotes = quotes\n    .filter((q, i) => i >= startPosition && i < startPosition + quotesPerPage)\n    .map(q => <Quote key={q._id} quote={q} />)\n\n  return (\n    <div>\n      {phrase && <small>{translate('SHOWING_RESULTS')} \"{transliterate(phrase)}\":</small>}\n      {mappedQuotes}\n      {totalPages > 1 && (\n        <Pagionation totalPages={totalPages} page={page} setPage={setPageAndScroll} />\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport {useSelector} from 'react-redux'\n\nimport {useTranslate} from '../store/actions'\nimport Quotes from '../components/main/Quotes'\n\nconst AllQuotes = () => {\n  const {filteredQuotes} = useSelector(state => state)\n  const translate = useTranslate()\n\n  return (\n    <main>\n      <h1>{translate('ALL_QUOTES')}</h1>\n      <Quotes quotes={filteredQuotes} />\n    </main>\n  )\n}\n\nexport default AllQuotes\n"],"sourceRoot":""}